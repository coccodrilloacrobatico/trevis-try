#!/usr/bin/env ruby

# Script in ruby che crea una pagina html per ogni directory con l'elenco dei file
# che ci sono dentro per poterla indicizzare. Converte gli INDEX.md e li incorpora

require 'kramdown'

def process_directory (dirpath)
	entries = [];
	directories = [];
	mdcode = "";

	puts "[LOG] Examining directory #{dirpath}"
	Dir.entries(dirpath).sort.each do |entry|
		puts "[LOG] Entry found: #{entry}"
		if entry == "." then
			# Se è la cartella stessa la ignoriamo
			puts "[LOG] Entry . ignored"
		elsif entry == ".." then
			# Se è la cartella superiore la elenchiamo
			puts "[LOG] Entry .. registered"
			entries << ["..", "../index.html", "d"]
		elsif entry =~ /^index.html$/i then
			# L'index non lo indicizziamo e verrà sovrascritto
			puts "[LOG] Entry index.html skipped"
		elsif entry =~ /^index\.md$/i then
			# Se l'entry contiene nel nome index.md (case-insensitive)
			# allora ne aggiungiamo il testo al nostro file, prima
			# che compaia l'elenco delle directories
			puts "[LOG] #{entry} is index-related. Adding markdown code to ours"
			mdcode += File.read("#{dirpath}/#{entry}") + "\n\n---\n\n"
			# E rimuoviamo il .md
			File.delete("#{dirpath}/#{entry}")
		elsif File.directory?("#{dirpath}/#{entry}") then
			# Se è un'altra cartella ci vorremo tornare più avanti
			puts "[LOG] #{entry} Is dir. Saving for future work"
			entries << ["#{entry}", "#{entry}/index.html", "d"]
			directories << "#{dirpath}/#{entry}"
		elsif File.file?("#{dirpath}/#{entry}") then
			# Se è un file vogliamo elencarlo
			# C'è da aggiungere che se è markdown allora lo convertiamo in html
			if entry =~ /^.*\.md$/ then
				base = File.basename(entry, ".md")
				puts "[LOG] #{entry} is markdown. Converting"
				output = Kramdown::Document.new(File.read("#{dirpath}/#{entry}")).to_html
				File.open("#{dirpath}/#{base}.html", 'w') do |f|
					f.puts output
				end
				# E poi lo eliminiamo
				File.delete("#{dirpath}/#{entry}")
				entries << ["#{base}.html", "#{base}.html", "f"]
			else
				puts "[LOG] #{entry} Is file. Registered"
				entries << ["#{entry}", "#{entry}", "f"]
			end
		else
			puts "[LOG] Unrecognized #{entry}"
			exit 1
		end
	end

	puts "[LOG] Producing html"
	mdcode += "# Elenco file nella directory\n\n"
	entries.each do |e|
		mdcode += "* [#{e[0]}](#{e[1]}) (#{e[2]})\n\n"
	end

	puts "[LOG] Saving html"
	File.open("#{dirpath}/index.html", 'w') do |f|
		f.puts Kramdown::Document.new(mdcode).to_html
	end

	directories.each do |dir|
		puts "[LOG] MOVING TO NEXT DIR"
		process_directory("#{dir}")
	end	
end


# Testiamo che ci sia almeno un argomento
if ARGV.size < 1 then
	puts "[ERROR] Almeno un parametro richiesto. Utilizzo: indexing dirpath"
else
	process_directory(ARGV[0])
end
